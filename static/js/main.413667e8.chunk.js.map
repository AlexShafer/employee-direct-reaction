{"version":3,"sources":["utils/API.js","components/Container/index.js","pages/EmployeeDirectory.js","App.js","index.js"],"names":["axios","get","then","res","data","results","map","employee","image","picture","thumbnail","name","first","last","country","location","email","Container","props","className","style","children","EmployeeDirectory","state","search","employees","handleInputChange","event","value","target","setState","sort","a","b","nameA","nameB","countryA","countryB","emailA","emailB","API","this","type","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","onChange","placeholder","scope","filter","includes","filteredEmployee","i","key","alt","src","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.413667e8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployeeData: function () {\r\n        return axios.get(\"https://randomuser.me/api?results=20\").then((res) => {\r\n            const employees = res.data.results;\r\n            return employees.map((employee) => {\r\n                return {\r\n                    image: employee.picture.thumbnail,\r\n                    name: employee.name.first + \" \" + employee.name.last,\r\n                    country: employee.location.country,\r\n                    email: employee.email\r\n                };\r\n            });\r\n        });\r\n    }\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Container from \"../components/Container\";\r\n\r\nclass EmployeeDirectory extends Component {\r\n  state = {\r\n    search: \"\",\r\n    employees: [],\r\n  };\r\n\r\n  // When the component mounts, get a list of all available employees and update employees state\r\n  componentDidMount() {\r\n    API.getEmployeeData().then((employees) => {\r\n      this.setState({\r\n        employees: employees,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    // Getting the value and name of the input which triggered the change\r\n    let value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    // Updating the input's state\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  sort = (event) => {\r\n    const value = event.target.value;\r\n\r\n    //Sort employees by name\r\n    if (value === \"name\") {\r\n      const { employees } = this.state;\r\n      this.setState({\r\n        employees: employees.sort(function (a, b) {\r\n          const nameA = a.name;\r\n          const nameB = b.name;\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n\r\n          // names must be equal\r\n          return 0;\r\n        }),\r\n      });\r\n    }\r\n\r\n    //Sort employees by country\r\n    if (value === \"country\") {\r\n      const { employees } = this.state;\r\n\r\n      this.setState({\r\n        employees: employees.sort(function (a, b) {\r\n          const countryA = a.country;\r\n          const countryB = b.country;\r\n          if (countryA < countryB) {\r\n            return -1;\r\n          }\r\n          if (countryA > countryB) {\r\n            return 1;\r\n          }\r\n\r\n          // countries must be equal\r\n          return 0;\r\n        }),\r\n      });\r\n    }\r\n\r\n    //Sort employees by email\r\n    if (value === \"email\") {\r\n      const { employees } = this.state;\r\n\r\n      this.setState({\r\n        employees: employees.sort(function (a, b) {\r\n          const emailA = a.email;\r\n          const emailB = b.email;\r\n          if (emailA < emailB) {\r\n            return -1;\r\n          }\r\n          if (emailA > emailB) {\r\n            return 1;\r\n          }\r\n\r\n          // emails must be equal\r\n          return 0;\r\n        }),\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { employees } = this.state;\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <br/>\r\n        <br/>\r\n        <Container>\r\n          <h1 className=\"text-center\">Employee-Direct-Reaction</h1>\r\n          <h6 className=\"text-center\">\r\n            Sort through employees by using the drop down menu or filter employees by typing in a name into the input field.\r\n          </h6>\r\n          <br/>\r\n          <div className=\"row text-center\">\r\n            <div className=\"col\">\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-secondary dropdown-toggle\"\r\n                  type=\"button\"\r\n                  id=\"dropdownMenuButton\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Sort By\r\n                </button>\r\n                <div\r\n                  className=\"dropdown-menu\"\r\n                  aria-labelledby=\"dropdownMenuButton\"\r\n                >\r\n                  <button\r\n                    value=\"name\"\r\n                    onClick={this.sort}\r\n                    className=\"dropdown-item\"\r\n                  >\r\n                    Name\r\n                  </button>\r\n                  <button\r\n                    value=\"country\"\r\n                    onClick={this.sort}\r\n                    className=\"dropdown-item\"\r\n                  >\r\n                    Country\r\n                  </button>\r\n                  <button\r\n                    value=\"email\"\r\n                    onClick={this.sort}\r\n                    className=\"dropdown-item\"\r\n                  >\r\n                    Email\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <input\r\n                value={this.state.search}\r\n                name=\"search\"\r\n                onChange={this.handleInputChange}\r\n                type=\"text\"\r\n                placeholder=\"Filter by Name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n\r\n          <table className=\"table \">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Image</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Country</th>\r\n                <th scope=\"col\">Email</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {employees\r\n              .filter((employee) => employee.name.includes(this.state.search))\r\n              .map((filteredEmployee, i) => (\r\n                <tbody key={i}>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      <img alt=\"employeeImg\" src={filteredEmployee.image} />\r\n                    </th>\r\n                    <td>{filteredEmployee.name}</td>\r\n                    <td>{filteredEmployee.country}</td>\r\n                    <td>{filteredEmployee.email}</td>\r\n                  </tr>\r\n                </tbody>\r\n              ))}\r\n          </table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeDirectory;\r\n","import React from 'react';\nimport EmployeeDirectory from \"./pages/EmployeeDirectory\";\n\nfunction App() {\n  return (\n    <EmployeeDirectory/>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}